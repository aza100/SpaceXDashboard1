{"ast":null,"code":"var _jsxFileName = \"/Users/asanka/Documents/TestFlutter/src/components/LaunchGrid.js\";\nimport React from 'react';\nimport { Paper, List, ListItem, ListItemText, ListItemButton, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LaunchGrid({\n  launches,\n  selectedLaunch,\n  onSelectLaunch\n}) {\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      height: '100%',\n      overflow: 'auto'\n    },\n    children: /*#__PURE__*/_jsxDEV(List, {\n      children: launches.map(launch => /*#__PURE__*/_jsxDEV(ListItem, {\n        disablePadding: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n          selected: (selectedLaunch === null || selectedLaunch === void 0 ? void 0 : selectedLaunch.id) === launch.id,\n          onClick: () => onSelectLaunch(launch),\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: launch.name,\n            secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                component: \"span\",\n                variant: \"body2\",\n                children: new Date(launch.date_utc).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 21\n              }, this), ' — ', launch.success ? 'Success' : 'Failed']\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this)\n      }, launch.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = LaunchGrid;\nexport default LaunchGrid;\nvar _c;\n$RefreshReg$(_c, \"LaunchGrid\");","map":{"version":3,"names":["React","Paper","List","ListItem","ListItemText","ListItemButton","Typography","jsxDEV","_jsxDEV","Fragment","_Fragment","LaunchGrid","launches","selectedLaunch","onSelectLaunch","sx","height","overflow","children","map","launch","disablePadding","selected","id","onClick","primary","name","secondary","component","variant","Date","date_utc","toLocaleDateString","fileName","_jsxFileName","lineNumber","columnNumber","success","_c","$RefreshReg$"],"sources":["/Users/asanka/Documents/TestFlutter/src/components/LaunchGrid.js"],"sourcesContent":["import React from 'react';\nimport { \n  Paper, \n  List, \n  ListItem, \n  ListItemText, \n  ListItemButton,\n  Typography \n} from '@mui/material';\n\nfunction LaunchGrid({ launches, selectedLaunch, onSelectLaunch }) {\n  return (\n    <Paper sx={{ height: '100%', overflow: 'auto' }}>\n      <List>\n        {launches.map((launch) => (\n          <ListItem key={launch.id} disablePadding>\n            <ListItemButton \n              selected={selectedLaunch?.id === launch.id}\n              onClick={() => onSelectLaunch(launch)}\n            >\n              <ListItemText\n                primary={launch.name}\n                secondary={\n                  <>\n                    <Typography component=\"span\" variant=\"body2\">\n                      {new Date(launch.date_utc).toLocaleDateString()}\n                    </Typography>\n                    {' — '}{launch.success ? 'Success' : 'Failed'}\n                  </>\n                }\n              />\n            </ListItemButton>\n          </ListItem>\n        ))}\n      </List>\n    </Paper>\n  );\n}\n\nexport default LaunchGrid; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,KAAK,EACLC,IAAI,EACJC,QAAQ,EACRC,YAAY,EACZC,cAAc,EACdC,UAAU,QACL,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvB,SAASC,UAAUA,CAAC;EAAEC,QAAQ;EAAEC,cAAc;EAAEC;AAAe,CAAC,EAAE;EAChE,oBACEN,OAAA,CAACP,KAAK;IAACc,EAAE,EAAE;MAAEC,MAAM,EAAE,MAAM;MAAEC,QAAQ,EAAE;IAAO,CAAE;IAAAC,QAAA,eAC9CV,OAAA,CAACN,IAAI;MAAAgB,QAAA,EACFN,QAAQ,CAACO,GAAG,CAAEC,MAAM,iBACnBZ,OAAA,CAACL,QAAQ;QAAiBkB,cAAc;QAAAH,QAAA,eACtCV,OAAA,CAACH,cAAc;UACbiB,QAAQ,EAAE,CAAAT,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEU,EAAE,MAAKH,MAAM,CAACG,EAAG;UAC3CC,OAAO,EAAEA,CAAA,KAAMV,cAAc,CAACM,MAAM,CAAE;UAAAF,QAAA,eAEtCV,OAAA,CAACJ,YAAY;YACXqB,OAAO,EAAEL,MAAM,CAACM,IAAK;YACrBC,SAAS,eACPnB,OAAA,CAAAE,SAAA;cAAAQ,QAAA,gBACEV,OAAA,CAACF,UAAU;gBAACsB,SAAS,EAAC,MAAM;gBAACC,OAAO,EAAC,OAAO;gBAAAX,QAAA,EACzC,IAAIY,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAACC,kBAAkB,CAAC;cAAC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrC,CAAC,EACZ,KAAK,EAAEhB,MAAM,CAACiB,OAAO,GAAG,SAAS,GAAG,QAAQ;YAAA,eAC7C;UACH;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACY;MAAC,GAhBJhB,MAAM,CAACG,EAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAiBd,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEZ;AAACE,EAAA,GA3BQ3B,UAAU;AA6BnB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}