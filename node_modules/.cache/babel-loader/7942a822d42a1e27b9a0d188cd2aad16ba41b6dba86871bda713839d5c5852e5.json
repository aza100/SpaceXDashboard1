{"ast":null,"code":"var _jsxFileName = \"/Users/asanka/Documents/TestFlutter/src/components/ProgressBar.js\";\nimport React from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProgressBar({\n  currentStep = 1\n}) {\n  const steps = [{\n    id: 1,\n    label: 'Card Details',\n    status: 'Completed'\n  }, {\n    id: 2,\n    label: 'Form Review',\n    status: 'In Progress'\n  }, {\n    id: 3,\n    label: 'Authentication',\n    status: 'Pending'\n  }, {\n    id: 4,\n    label: 'Create Code',\n    status: 'Pending'\n  }];\n  const getStepColor = stepId => {\n    if (stepId < currentStep) return '#4caf50';\n    if (stepId === currentStep) return '#1976d2';\n    return 'rgba(255, 255, 255, 0.23)';\n  };\n  const getStepStatus = stepId => {\n    if (stepId < currentStep) return 'Completed';\n    if (stepId === currentStep) return 'In Progress';\n    return 'Pending';\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      p: 4,\n      background: 'rgba(26, 44, 78, 0.8)',\n      backdropFilter: 'blur(10px)',\n      borderBottom: '1px solid rgba(255, 255, 255, 0.12)'\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        position: 'relative',\n        maxWidth: 800,\n        margin: '0 auto'\n      },\n      children: steps.map((step, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            position: 'relative',\n            zIndex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: 40,\n              height: 40,\n              borderRadius: '50%',\n              bgcolor: getStepColor(step.id),\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              color: 'white',\n              transition: 'all 0.3s ease',\n              border: step.id === currentStep ? '2px solid #00f5ff' : 'none',\n              boxShadow: step.id === currentStep ? '0 0 15px #00f5ff' : 'none'\n            },\n            children: step.id < currentStep ? '✓' : step.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              mt: 1,\n              color: step.id === currentStep ? '#00f5ff' : 'text.secondary',\n              fontWeight: step.id === currentStep ? 600 : 400\n            },\n            children: step.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            sx: {\n              color: step.id === currentStep ? '#00f5ff' : 'text.secondary',\n              mt: 0.5\n            },\n            children: getStepStatus(step.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), index < steps.length - 1 && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1,\n            height: 2,\n            bgcolor: 'rgba(255, 255, 255, 0.12)',\n            position: 'relative',\n            top: 20,\n            '&::before': {\n              content: '\"\"',\n              position: 'absolute',\n              left: 0,\n              top: 0,\n              height: '100%',\n              width: step.id < currentStep ? '100%' : step.id === currentStep ? '50%' : '0%',\n              bgcolor: '#00f5ff',\n              transition: 'width 0.3s ease'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)]\n      }, step.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = ProgressBar;\nexport default ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","Box","Typography","jsxDEV","_jsxDEV","ProgressBar","currentStep","steps","id","label","status","getStepColor","stepId","getStepStatus","sx","width","p","background","backdropFilter","borderBottom","children","display","justifyContent","alignItems","position","maxWidth","margin","map","step","index","Fragment","flexDirection","zIndex","height","borderRadius","bgcolor","color","transition","border","boxShadow","fileName","_jsxFileName","lineNumber","columnNumber","variant","mt","fontWeight","length","flexGrow","top","content","left","_c","$RefreshReg$"],"sources":["/Users/asanka/Documents/TestFlutter/src/components/ProgressBar.js"],"sourcesContent":["import React from 'react';\nimport { Box, Typography } from '@mui/material';\n\nfunction ProgressBar({ currentStep = 1 }) {\n  const steps = [\n    { id: 1, label: 'Card Details', status: 'Completed' },\n    { id: 2, label: 'Form Review', status: 'In Progress' },\n    { id: 3, label: 'Authentication', status: 'Pending' },\n    { id: 4, label: 'Create Code', status: 'Pending' }\n  ];\n\n  const getStepColor = (stepId) => {\n    if (stepId < currentStep) return '#4caf50';\n    if (stepId === currentStep) return '#1976d2';\n    return 'rgba(255, 255, 255, 0.23)';\n  };\n\n  const getStepStatus = (stepId) => {\n    if (stepId < currentStep) return 'Completed';\n    if (stepId === currentStep) return 'In Progress';\n    return 'Pending';\n  };\n\n  return (\n    <Box sx={{\n      width: '100%',\n      p: 4,\n      background: 'rgba(26, 44, 78, 0.8)',\n      backdropFilter: 'blur(10px)',\n      borderBottom: '1px solid rgba(255, 255, 255, 0.12)'\n    }}>\n      <Box sx={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        position: 'relative',\n        maxWidth: 800,\n        margin: '0 auto'\n      }}>\n        {steps.map((step, index) => (\n          <React.Fragment key={step.id}>\n            <Box sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              position: 'relative',\n              zIndex: 1\n            }}>\n              <Box sx={{\n                width: 40,\n                height: 40,\n                borderRadius: '50%',\n                bgcolor: getStepColor(step.id),\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                color: 'white',\n                transition: 'all 0.3s ease',\n                border: step.id === currentStep ? '2px solid #00f5ff' : 'none',\n                boxShadow: step.id === currentStep ? '0 0 15px #00f5ff' : 'none'\n              }}>\n                {step.id < currentStep ? '✓' : step.id}\n              </Box>\n              <Typography\n                variant=\"body2\"\n                sx={{\n                  mt: 1,\n                  color: step.id === currentStep ? '#00f5ff' : 'text.secondary',\n                  fontWeight: step.id === currentStep ? 600 : 400\n                }}\n              >\n                {step.label}\n              </Typography>\n              <Typography\n                variant=\"caption\"\n                sx={{\n                  color: step.id === currentStep ? '#00f5ff' : 'text.secondary',\n                  mt: 0.5\n                }}\n              >\n                {getStepStatus(step.id)}\n              </Typography>\n            </Box>\n            {index < steps.length - 1 && (\n              <Box sx={{\n                flexGrow: 1,\n                height: 2,\n                bgcolor: 'rgba(255, 255, 255, 0.12)',\n                position: 'relative',\n                top: 20,\n                '&::before': {\n                  content: '\"\"',\n                  position: 'absolute',\n                  left: 0,\n                  top: 0,\n                  height: '100%',\n                  width: step.id < currentStep ? '100%' : step.id === currentStep ? '50%' : '0%',\n                  bgcolor: '#00f5ff',\n                  transition: 'width 0.3s ease'\n                }\n              }}>\n              </Box>\n            )}\n          </React.Fragment>\n        ))}\n      </Box>\n    </Box>\n  );\n}\n\nexport default ProgressBar;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,WAAWA,CAAC;EAAEC,WAAW,GAAG;AAAE,CAAC,EAAE;EACxC,MAAMC,KAAK,GAAG,CACZ;IAAEC,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,cAAc;IAAEC,MAAM,EAAE;EAAY,CAAC,EACrD;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,aAAa;IAAEC,MAAM,EAAE;EAAc,CAAC,EACtD;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,gBAAgB;IAAEC,MAAM,EAAE;EAAU,CAAC,EACrD;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,aAAa;IAAEC,MAAM,EAAE;EAAU,CAAC,CACnD;EAED,MAAMC,YAAY,GAAIC,MAAM,IAAK;IAC/B,IAAIA,MAAM,GAAGN,WAAW,EAAE,OAAO,SAAS;IAC1C,IAAIM,MAAM,KAAKN,WAAW,EAAE,OAAO,SAAS;IAC5C,OAAO,2BAA2B;EACpC,CAAC;EAED,MAAMO,aAAa,GAAID,MAAM,IAAK;IAChC,IAAIA,MAAM,GAAGN,WAAW,EAAE,OAAO,WAAW;IAC5C,IAAIM,MAAM,KAAKN,WAAW,EAAE,OAAO,aAAa;IAChD,OAAO,SAAS;EAClB,CAAC;EAED,oBACEF,OAAA,CAACH,GAAG;IAACa,EAAE,EAAE;MACPC,KAAK,EAAE,MAAM;MACbC,CAAC,EAAE,CAAC;MACJC,UAAU,EAAE,uBAAuB;MACnCC,cAAc,EAAE,YAAY;MAC5BC,YAAY,EAAE;IAChB,CAAE;IAAAC,QAAA,eACAhB,OAAA,CAACH,GAAG;MAACa,EAAE,EAAE;QACPO,OAAO,EAAE,MAAM;QACfC,cAAc,EAAE,eAAe;QAC/BC,UAAU,EAAE,QAAQ;QACpBC,QAAQ,EAAE,UAAU;QACpBC,QAAQ,EAAE,GAAG;QACbC,MAAM,EAAE;MACV,CAAE;MAAAN,QAAA,EACCb,KAAK,CAACoB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBzB,OAAA,CAACJ,KAAK,CAAC8B,QAAQ;QAAAV,QAAA,gBACbhB,OAAA,CAACH,GAAG;UAACa,EAAE,EAAE;YACPO,OAAO,EAAE,MAAM;YACfU,aAAa,EAAE,QAAQ;YACvBR,UAAU,EAAE,QAAQ;YACpBC,QAAQ,EAAE,UAAU;YACpBQ,MAAM,EAAE;UACV,CAAE;UAAAZ,QAAA,gBACAhB,OAAA,CAACH,GAAG;YAACa,EAAE,EAAE;cACPC,KAAK,EAAE,EAAE;cACTkB,MAAM,EAAE,EAAE;cACVC,YAAY,EAAE,KAAK;cACnBC,OAAO,EAAExB,YAAY,CAACiB,IAAI,CAACpB,EAAE,CAAC;cAC9Ba,OAAO,EAAE,MAAM;cACfE,UAAU,EAAE,QAAQ;cACpBD,cAAc,EAAE,QAAQ;cACxBc,KAAK,EAAE,OAAO;cACdC,UAAU,EAAE,eAAe;cAC3BC,MAAM,EAAEV,IAAI,CAACpB,EAAE,KAAKF,WAAW,GAAG,mBAAmB,GAAG,MAAM;cAC9DiC,SAAS,EAAEX,IAAI,CAACpB,EAAE,KAAKF,WAAW,GAAG,kBAAkB,GAAG;YAC5D,CAAE;YAAAc,QAAA,EACCQ,IAAI,CAACpB,EAAE,GAAGF,WAAW,GAAG,GAAG,GAAGsB,IAAI,CAACpB;UAAE;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC,CAAC,eACNvC,OAAA,CAACF,UAAU;YACT0C,OAAO,EAAC,OAAO;YACf9B,EAAE,EAAE;cACF+B,EAAE,EAAE,CAAC;cACLT,KAAK,EAAER,IAAI,CAACpB,EAAE,KAAKF,WAAW,GAAG,SAAS,GAAG,gBAAgB;cAC7DwC,UAAU,EAAElB,IAAI,CAACpB,EAAE,KAAKF,WAAW,GAAG,GAAG,GAAG;YAC9C,CAAE;YAAAc,QAAA,EAEDQ,IAAI,CAACnB;UAAK;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eACbvC,OAAA,CAACF,UAAU;YACT0C,OAAO,EAAC,SAAS;YACjB9B,EAAE,EAAE;cACFsB,KAAK,EAAER,IAAI,CAACpB,EAAE,KAAKF,WAAW,GAAG,SAAS,GAAG,gBAAgB;cAC7DuC,EAAE,EAAE;YACN,CAAE;YAAAzB,QAAA,EAEDP,aAAa,CAACe,IAAI,CAACpB,EAAE;UAAC;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACb,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,EACLd,KAAK,GAAGtB,KAAK,CAACwC,MAAM,GAAG,CAAC,iBACvB3C,OAAA,CAACH,GAAG;UAACa,EAAE,EAAE;YACPkC,QAAQ,EAAE,CAAC;YACXf,MAAM,EAAE,CAAC;YACTE,OAAO,EAAE,2BAA2B;YACpCX,QAAQ,EAAE,UAAU;YACpByB,GAAG,EAAE,EAAE;YACP,WAAW,EAAE;cACXC,OAAO,EAAE,IAAI;cACb1B,QAAQ,EAAE,UAAU;cACpB2B,IAAI,EAAE,CAAC;cACPF,GAAG,EAAE,CAAC;cACNhB,MAAM,EAAE,MAAM;cACdlB,KAAK,EAAEa,IAAI,CAACpB,EAAE,GAAGF,WAAW,GAAG,MAAM,GAAGsB,IAAI,CAACpB,EAAE,KAAKF,WAAW,GAAG,KAAK,GAAG,IAAI;cAC9E6B,OAAO,EAAE,SAAS;cAClBE,UAAU,EAAE;YACd;UACF;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CACN;MAAA,GA9DkBf,IAAI,CAACpB,EAAE;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA+DZ,CACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACS,EAAA,GAzGQ/C,WAAW;AA2GpB,eAAeA,WAAW;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}